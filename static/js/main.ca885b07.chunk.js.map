{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/item-status-filter.js","components/add-panel/index.js","components/add-panel/add-panel.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","total","doneCount","notDoneCount","className","SearchPanel","state","term","onSearchChange","event","setState","target","value","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDelete","onToggleImportant","onToggleDone","classNameDone","classNameImortant","classNameDoneLabel","done","important","onClick","TodoList","todoData","items","map","item","id","itemProps","key","ItemStatusFilter","buttons","filterName","filter","onFilterChange","classNames","AddPanel","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","TODO_DATA","createItem","deleteItem","indx","findIndex","e","before","slice","after","addItem","text","console","log","newItem","toggleProperty","array","propName","index","oldItem","length","toLowerCase","indexOf","filteredItems","visibleItems","search","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca885b07.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ( { total, \r\n                    doneCount, \r\n                    notDoneCount \r\n                } ) => {\r\n    return ( \r\n        <div className=\"app-header text-center\">\r\n            <h1 className=\"app-title\">Todo App</h1>\r\n\r\n            <span className=\"d-flex justify-content-center\">\r\n                <h6 className=\"task-count\">\r\n                    Total tasks \r\n                    <span className=\"badge badge-primary task-count-item\">\r\n                        {total} \r\n                    </span>\r\n                </h6>\r\n                <h6 className=\"task-count\">\r\n                    done \r\n                    <span className=\"badge badge-primary task-count-item\">\r\n                        {doneCount} \r\n                    </span>\r\n                </h6>\r\n                <h6 className=\"task-count\">\r\n                    not done yet \r\n                    <span className=\"badge badge-primary task-count-item\">\r\n                        {notDoneCount} \r\n                    </span>\r\n                </h6>\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({\r\n          term: event.target.value\r\n        });\r\n        this.props.onSearchChange(event.target.value);\r\n      };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"type to search\" \r\n                  value={this.state.term}\r\n                  onChange={this.onSearchChange}\r\n                  />\r\n        );\r\n    };\r\n};\r\n","import React from 'react';\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ label, \r\n                        onDelete, \r\n                        onToggleImportant, \r\n                        onToggleDone,\r\n                        done, \r\n                        important \r\n                    }) => {\r\n\r\n    let classNameDone = 'todo-list-item d-flex justify-content-between';\r\n    let classNameImortant = 'fa fa-star-o star';\r\n    let classNameDoneLabel = 'badge badge-primary task-count-item d-none';\r\n    if(done) {\r\n        classNameDone += ' done';\r\n        classNameDoneLabel += ' d-inline-block';\r\n    };\r\n\r\n    if(important) {\r\n        classNameDone += ' important';\r\n        classNameImortant = 'fa fa-star';\r\n    }\r\n\r\n    return(\r\n        <span className={classNameDone} >\r\n            <span\r\n                className=\"todo-list-item-label\"\r\n                onClick={ onToggleDone }>\r\n\r\n                {label}\r\n\r\n                <span className={classNameDoneLabel}>\r\n                    done \r\n                </span>\r\n            </span>\r\n            <span className=\"todo-list-item-buttons d-flex\">\r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm\"\r\n                        onClick={onDelete} >\r\n                    <i className=\"fa fa-minus\"></i>\r\n                </button>\r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-primary btn-sm\"\r\n                        onClick={onToggleImportant}>\r\n                    <i className={classNameImortant}></i>\r\n                </button> \r\n            </span>   \r\n        </span>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './todo-list.css';\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\n\r\nconst TodoList = ( { todoData, onDelete, onToggleImportant, onToggleDone } ) => {\r\n    \r\n    const items = todoData.map( (item) => {\r\n\r\n        const { id, ...itemProps} = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem \r\n                    { ...itemProps }\r\n                    onDelete={ () => onDelete(id) }\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)} \r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { items }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {filterName: 'all', label: 'All'},\r\n        {filterName: 'active', label: 'Active'},\r\n        {filterName: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({ filterName, label }) => {\r\n            const isActive = filter === filterName;\r\n            const classNames = isActive ? 'btn btn-primary' : 'btn btn-outline-primary';\r\n\r\n            return (\r\n                <button type=\"button\"\r\n                    className={classNames}\r\n                    key={filterName}\r\n                    onClick={() => onFilterChange(filterName)}>\r\n                        { label }\r\n                </button>\r\n            );   \r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                { buttons }\r\n            </div>\r\n        );\r\n    };\r\n};","import AddPanel from './add-panel';\r\n\r\nexport default AddPanel;","import React, { Component } from 'react';\r\n\r\nimport './add-panel.css';\r\n\r\nexport default class AddPanel extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n      };\r\n    \r\n      onLabelChange = (event) => {\r\n        this.setState({\r\n          label: event.target.value\r\n        });\r\n      };\r\n    \r\n      onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n          label: ''\r\n        });\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"add-panel d-flex align-items-center\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    className=\"form-control\" \r\n                    type=\"text\" \r\n                    placeholder=\"type to add new task\" \r\n                    onChange={this.onLabelChange}\r\n                    value={this.state.label} \r\n                    />\r\n                <button\r\n                    className=\"btn btn-outline-primary btn-sm\">\r\n                        <i className=\"fa fa-plus\" />\r\n                </button> \r\n            </form>  \r\n        );\r\n    };\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport './app.css';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport AddPanel from '../add-panel';\r\n\r\nexport default class App extends Component {\r\n    maxId = 100;\r\n\r\n    state = {\r\n        TODO_DATA : [\r\n            this.createItem('Create Todo App'),\r\n            this.createItem('Create Film Search App'),\r\n            this.createItem('Create Shopping Card'),\r\n            this.createItem('Create PicEssay App')\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    createItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    };\r\n    \r\n    deleteItem = (id) => {\r\n        this.setState(({ TODO_DATA }) => {\r\n           const indx = TODO_DATA.findIndex((e) => e.id === id);\r\n\r\n           const before = TODO_DATA.slice(0, indx);\r\n           const after = TODO_DATA.slice(indx + 1);\r\n           \r\n           const NEW_TODO_DATA = [...before, ...after];\r\n           return {\r\n               TODO_DATA: NEW_TODO_DATA\r\n           }\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        console.log('This label:', text);\r\n        // if(text) {\r\n            this.setState(({ TODO_DATA }) => {\r\n                const newItem = this.createItem(text);\r\n                \r\n                const NEW_TODO_DATA = [...TODO_DATA, newItem];\r\n                return {\r\n                    TODO_DATA: NEW_TODO_DATA\r\n                    \r\n                }\r\n             });\r\n        // };\r\n    };\r\n\r\n    toggleProperty(array, id, propName) {\r\n        const index = array.findIndex((e) => e.id === id);\r\n\r\n        const oldItem = array[index];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName] };\r\n\r\n        return [\r\n            ...array.slice(0, index),\r\n            newItem,\r\n            ...array.slice(index + 1)\r\n        ];\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ TODO_DATA }) => {\r\n            return {\r\n                TODO_DATA: this.toggleProperty(TODO_DATA, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ TODO_DATA }) => {\r\n            return {\r\n                TODO_DATA: this.toggleProperty(TODO_DATA, id, 'important')\r\n            };\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    search(items, term) {\r\n\r\n        if(term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => { \r\n            return item.label\r\n            .toLowerCase()\r\n            .indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all': return items;\r\n\r\n            case 'active': \r\n            return items.filter((item) => {\r\n                return !item.done;\r\n            });\r\n\r\n            case 'done': \r\n            return items.filter((item) => {\r\n                return item.done;\r\n            });\r\n            default: return items;\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { TODO_DATA, term, filter } = this.state;\r\n        \r\n        const filteredItems = this.filter(TODO_DATA, filter);\r\n        const visibleItems = this.search(filteredItems, term);\r\n\r\n        const doneCount = TODO_DATA.filter((el) => el.done).length;\r\n        const notDoneCount = TODO_DATA.filter((el) => el.done === false).length;\r\n\r\n        return(\r\n            <div className=\"app\">\r\n                <AppHeader \r\n                    total={ TODO_DATA.length }\r\n                    doneCount={doneCount}\r\n                    notDoneCount={notDoneCount}\r\n                />\r\n                <div className=\"serch-panel-wrapper d-flex\">\r\n                    <SearchPanel onSearchChange={this.onSearchChange} />\r\n                    <ItemStatusFilter \r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange}/>\r\n                </div>\r\n                <TodoList \r\n                    todoData={ visibleItems }\r\n                    onDelete={ this.deleteItem }\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone}\r\n                />\r\n                <AddPanel onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    };    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}